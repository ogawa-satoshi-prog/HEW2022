<!DOCTYPE html>
<html lang="ja" class="h-100">

<head>
  <title>Quest Meeting</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
    crossorigin="anonymous"></script>
    <script src="/socket.io/socket.io.js"></script>
</head>

<body class="d-flex flex-column h-100">
  <!-- HEADER -->
  <header>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <div class="container-fluid w-75">
        <a class="navbar-brand">Quest Meeting</a>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
          <div class="navbar-nav">
            <a class="nav-link">Home</a>
          </div>
        </div>
      </div>
    </nav>
  </header>

  <!-- MAIN -->
  <main class="mt-5">
    <section class="container w-50 mb-5">
      <h1 class="m-auto text-center mb-3">Websocket</h1>
      <p class="text-center">socket</p>
    </section>

    <section class="container w-50 mb-5 text-center">
      <button class="btn btn-primary" id="btn1">button1</button>
      <button class="btn btn-danger" id="btn2">ちょっと待った!</button>
      <button class="btn btn-danger" id="btn3">問題一覧</button>
      <button class="btn btn-danger" id="btn4">問題を見る</button>
      <button class="btn btn-danger" id="btn5">解説</button>
    </section>

    <section class="container w-50 mb-5 text-center" id="ejsView">
      <div>first</div>
    </section>
  </main>

  <!-- FOOTER -->
  <footer class="footer mt-auto py-3 bg-light">
    <div class="container text-center">
      <span class="text-muted">morokoshi</span>
    </div>
  </footer>


  <!-- JavaScript -->
  <script>
    let socket = io.connect();
    console.log(socket);

    // サーバーで指定されたイベントをトリガーとして扱う
    socket.on('server_to_client', (data) => {
      appMsg("受信:" + data.text);
    });

    // メッセージ表示関数
    function appMsg(text) {
      const view = document.getElementById('ejsView');

      let newNode = document.createElement('div');
      newNode.innerText = text;
      view.appendChild(newNode);
    }

    const btn1 = document.getElementById('btn1');
    btn1.addEventListener('click',()=>{
      socket.emit('client_to_server', { text: 'world' });
    },false);

    const btn2 = document.getElementById('btn2');
    btn2.addEventListener('click',()=>{
      socket.emit('stop', 'ちょっと待った!!');
    },false);

    // --------------------------------以下、小川が追加した３種類---------------------------------------

    const btn3 = document.getElementById('btn3');
    btn3.addEventListener('click',()=>{
      socket.emit('next', '5'); // 第２引数を選択された科目番号の値に変更する必要あり
    },false);

    socket.on('resQuestion', (data) => {
      for(let i=0;i<data.question.length;i++){
        appMsg(data.question[i].question); 
      }
    });
    
    const btn4 = document.getElementById('btn4');
    btn4.addEventListener('click',()=>{
      socket.emit('detail', '46'); // 第２引数を選択された問題番号の値に変更する必要あり
    },false);

    socket.on('resQuestionDetail', (data) => {
      appMsg("[" + data.question[0].que_id + "]" + data.question[0].question); 
    });

    const btn5 = document.getElementById('btn5');
    btn5.addEventListener('click',()=>{
      socket.emit('commentary', '46'); // 第２引数を選択された問題番号の値に変更する必要あり
    },false);

    socket.on('resQuestionCommentary', (data) => {
      appMsg("[" + data.question[0].que_id + "]" + data.question[0].question); 
    });



  </script>
</body>

</html>